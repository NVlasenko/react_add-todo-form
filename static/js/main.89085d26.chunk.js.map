{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","_ref","user","_jsx","className","href","concat","children","TodoInfo","todo","_jsxs","cn","completed","title","TodoList","todos","map","getUserById","userId","usersFromServer","find","initialTodos","App","setTitle","useState","titleError","setTitleError","setUserId","userError","setUserError","setTodos","action","method","onSubmit","event","newTodo","preventDefault","trim","Math","max","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"mKAAe,G,KAAA,CACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4B,uBCpDJ,MAAMC,EAA2BC,IAAe,IAAd,KAAEC,GAAMD,EAC/C,OACEE,cAAA,KAAGC,UAAU,WAAWC,KAAI,UAAAC,OAAYJ,EAAKH,OAAQQ,SAClDL,EAAKL,QCDCW,EAA4BP,IAAe,IAAd,KAAEQ,GAAMR,EAChD,OACEE,cAAA,OAAAI,SACEG,eAAA,WAEE,UAASD,EAAKb,GACdQ,UAAS,YAAAE,OAAcK,IAAG,CAAE,sBAAuBF,EAAKG,aAAeL,SAAA,CAEvEJ,cAAA,MAAIC,UAAU,kBAAiBG,SAC5BE,EAAKI,QAEPJ,EAAKP,MAAQC,cAACH,EAAQ,CAACE,KAAMO,EAAKP,SAP9BO,EAAKb,OCLLkB,EAA4Bb,IAAgB,IAAf,MAAEc,GAAOd,EACjD,OACEE,cAAA,WAASC,UAAU,WAAUG,SAC1BQ,EAAMC,KAAKP,GACVN,cAACK,EAAQ,CAACC,KAAMA,GAAWA,EAAKb,SCLxC,SAASqB,EAAYC,GACnB,OAAOC,EAAgBC,MAAMlB,GAASA,EAAKN,KAAOsB,KAC7C,KAGP,MAAMG,ECZS,CACb,CACEzB,GAAI,EACJiB,MAAO,qBACPD,WAAW,EACXM,OAAQ,GAEV,CACEtB,GAAI,GACJiB,MAAO,kBACPD,WAAW,EACXM,OAAQ,GAEV,CACEtB,GAAI,EACJiB,MAAO,qCACPD,WAAW,EACXM,OAAQ,IDLiCF,KAAKD,IAAK,IAClDA,EACHb,KAAMe,EAAYF,EAAMG,YAGbI,EAAMA,KACjB,MAAOT,EAAOU,GAAYC,mBAAS,KAC5BC,EAAYC,GAAiBF,oBAAS,IACtCN,EAAQS,GAAaH,mBAAS,IAC9BI,EAAWC,GAAgBL,oBAAS,IACpCT,EAAOe,GAAYN,mBAAkBH,GAkD5C,OACEX,eAAA,OAAKN,UAAU,MAAKG,SAAA,CAClBJ,cAAA,MAAAI,SAAI,kBAEJG,eAAA,QACEqB,OAAO,aACPC,OAAO,OACPC,SAzCgBC,IAdLC,OAefD,EAAME,iBAEDvB,EAAMwB,QAMI,IAAXnB,GAMJQ,GAAeb,GACfgB,GAAcX,GAEVL,GAASK,IACXK,EAAS,IACTI,EAAU,IAGRd,GAASK,IArCEiB,EAsCL,CACNvC,GAAI0C,KAAKC,OAAOxB,EAAMC,KAAKP,GAASA,EAAKb,MAAO,EAChDiB,QACAD,WAAW,EACXM,SACAhB,KAAMe,EAAYC,IA1CtBY,GAASrB,GAAQ,IAAIA,EAAM0B,OAuBzBN,GAAa,GANbH,GAAc,IAqCWnB,SAAA,CAEvBG,eAAA,OAAKN,UAAU,QAAOG,SAAA,CACpBJ,cAAA,SAAOqC,QAAQ,QAAOjC,SAAC,oBACvBJ,cAAA,SACEP,GAAG,QACH6C,KAAK,OACLC,YAAY,gBACZ,UAAQ,aACRC,MAAO9B,EACP+B,SA7DiBV,IACzBX,EAASW,EAAMW,OAAOF,OACtBjB,GAAc,MA6DRvB,cAAA,OAAAI,SACGkB,GACCtB,cAAA,QAAMC,UAAU,QAAOG,SAAC,8BAK9BG,eAAA,OAAKN,UAAU,QAAOG,SAAA,CACpBJ,cAAA,SAAOqC,QAAQ,OAAMjC,SAAC,eACtBG,eAAA,UACEd,GAAG,OACH,UAAQ,aACR+C,MAAOzB,EACP0B,SAvEgBV,IACxBP,GAAWO,EAAMW,OAAOF,OACxBd,GAAa,IAqEsBtB,SAAA,CAE3BJ,cAAA,UAAQwC,MAAM,IAAIG,UAAQ,EAAAvC,SAAC,kBAC1BY,EAAgBH,KAAKd,GACpBC,cAAA,UACEwC,MAAOzC,EAAKN,GAAGW,SAGdL,EAAKL,MAFDK,EAAKN,SAOhBO,cAAA,OAAAI,SACGqB,GACCzB,cAAA,QAAMC,UAAU,QAAOG,SAAC,8BAK9BJ,cAAA,UACEsC,KAAK,SACL,UAAQ,eAAclC,SACvB,WAKHJ,cAACW,EAAQ,CACPC,MAAOA,QElIfgC,IAASC,OAAO7C,cAACmB,EAAG,IAAK2B,SAASC,eAAe,U","file":"static/js/main.89085d26.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { Users } from '../../types/Users';\n\ntype Props = {\n  user: Users;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todos } from '../../types/Todos';\nimport { UserInfo } from '../UserInfo';\n\n  type Props = {\n    todo: Todos;\n  };\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <div>\n      <article\n        key={todo.id}\n        data-id={todo.id}\n        className={`TodoInfo ${cn({ 'TodoInfo--completed': todo.completed })}`}\n      >\n        <h2 className=\"TodoInfo__title\">\n          {todo.title}\n        </h2>\n        {todo.user && <UserInfo user={todo.user} />}\n      </article>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Todos } from '../../types/Todos';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todos[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todos } from './types/Todos';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find((user) => user.id === userId)\n    || null;\n}\n\nconst initialTodos:Todos[] = todosFromServer.map((todos) => ({\n  ...todos,\n  user: getUserById(todos.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [userError, setUserError] = useState(false);\n  const [todos, setTodos] = useState<Todos[]>(initialTodos);\n\n  const addTodo = (newTodo: Todos) => {\n    setTodos(todo => [...todo, newTodo]);\n  };\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleChangeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserError(false);\n  };\n\n  const handleSubmit = (event:React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title.trim()) {\n      setTitleError(true);\n\n      return;\n    }\n\n    if (userId === 0) {\n      setUserError(true);\n\n      return;\n    }\n\n    setTitleError(!title);\n    setUserError(!userId);\n\n    if (title && userId) {\n      setTitle('');\n      setUserId(0);\n    }\n\n    if (title && userId) {\n      addTodo({\n        id: Math.max(...todos.map((todo) => todo.id)) + 1,\n        title,\n        completed: false,\n        userId,\n        user: getUserById(userId),\n      });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: &nbsp;&nbsp;</label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            placeholder=\"Enter a title\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleChangeTitle}\n          />\n          <div>\n            {titleError && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </div>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: &nbsp;</label>\n          <select\n            id=\"user\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleChangeUser}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map((user) => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          <div>\n            {userError && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </div>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}